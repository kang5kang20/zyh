<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/rabbit
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 使用注解式注入 -->
	<context:annotation-config />
	<!-- 扫描包下所有类，让注解生效 -->
	<context:component-scan base-package="com.zyh" />


	<context:property-placeholder
		location="
		classpath:jdbc.properties,classpath:redis.properties" />

	<!-- 获取数据源(使用dbcp连接池) -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${name}" />
		<property name="password" value="${password}" />
	</bean>

	<!-- 使AspectJ注解起作用：自动为匹配的类生成代理对象 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>


	<!-- define the SqlSessionFactory, notice that configLocation is not needed 
		when you use MapperFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:com/zyh/dao/*/*.xml"></property>
	</bean>


	<!-- 声明式事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="go*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="within(com.zyh.service..*)" />
	</aop:config>


	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zyh.dao" />
	</bean>
	
	<!--请求处理 -->
	<mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <!-- 
            <bean
                class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json; charset=UTF-8</value>
                        <value>application/x-www-form-urlencoded; charset=UTF-8</value>
                    </list>
                </property>
            </bean>
             -->
        </mvc:message-converters>
    </mvc:annotation-driven>

	<!-- 拦截器 -->
	<!--  
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**/*.do" />
			<mvc:exclude-mapping path="/**/login.do" />
			<mvc:exclude-mapping path="/**/getcode.do" />
			<mvc:exclude-mapping path="/**/userlogin.do" />
			<mvc:exclude-mapping path="/transaction/*" />
			<bean class="com.platform.interceptor.LoginInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**/*.do" />
			<bean class="com.zyh.interceptor.HandlerInterceptorCust" />
		</mvc:interceptor>
	</mvc:interceptors>
	-->
	<mvc:interceptors>
		<mvc:interceptor>
		<mvc:mapping path="/**/*.act" />
			<bean class="com.zyh.interceptor.HandlerInterceptorCust" />
	</mvc:interceptor>
	</mvc:interceptors>
	<!--定位静态资源 -->
	<mvc:resources location="/WEB-INF/static/" mapping="/static/**" />

	<!--配置视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 全局异常处理 自定义实现spring的全局异常解析器HandlerExceptionResolver -->
	<bean id="exceptionResolver" class="com.zyh.custException.CustomExceptionResolver"></bean>
	
	<!-- 导入redis配置 -->
	<import resource="redis-config.xml"/>
	
</beans>  
