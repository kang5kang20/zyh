<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyh.dao.company.ZyhCompanyPositionMapper">
  <resultMap id="BaseResultMap" type="com.zyh.entity.company.ZyhCompanyPosition">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="companyid" jdbcType="OTHER" property="companyid" />
    <result column="compnayname" jdbcType="OTHER" property="compnayname" />
    <result column="positionname" jdbcType="OTHER" property="positionname" />
    <result column="workcity" jdbcType="OTHER" property="workcity" />
    <result column="fixyear" jdbcType="OTHER" property="fixyear" />
    <result column="maxage" jdbcType="OTHER" property="maxage" />
    <result column="moneyarea" jdbcType="OTHER" property="moneyarea" />
    <result column="desct" jdbcType="OTHER" property="desct" />
    <result column="required" jdbcType="OTHER" property="required" />
    <result column="optime" jdbcType="OTHER" property="optime" />
    <result column="minmoney" jdbcType="OTHER" property="minmoney" />
    <result column="maxmoney" jdbcType="OTHER" property="maxmoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, companyid, compnayname, positionname, workcity, fixyear, maxage, moneyarea, desct, 
    required, optime, minmoney, maxmoney
  </sql>
  <select id="selectByExample" parameterType="com.zyh.entity.company.ZyhCompanyPositionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zyh_company_position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zyh_company_position
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from zyh_company_position
    where id = #{id,jdbcType=OTHER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyh.entity.company.ZyhCompanyPositionExample">
    delete from zyh_company_position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyh.entity.company.ZyhCompanyPosition">
    insert into zyh_company_position (id, companyid, compnayname, 
      positionname, workcity, fixyear, 
      maxage, moneyarea, desct, 
      required, optime, minmoney, 
      maxmoney)
    values (#{id,jdbcType=OTHER}, #{companyid,jdbcType=OTHER}, #{compnayname,jdbcType=OTHER}, 
      #{positionname,jdbcType=OTHER}, #{workcity,jdbcType=OTHER}, #{fixyear,jdbcType=OTHER}, 
      #{maxage,jdbcType=OTHER}, #{moneyarea,jdbcType=OTHER}, #{desct,jdbcType=OTHER}, 
      #{required,jdbcType=OTHER}, #{optime,jdbcType=OTHER}, #{minmoney,jdbcType=OTHER}, 
      #{maxmoney,jdbcType=OTHER})
  </insert>
  <insert id="insertSelective" parameterType="com.zyh.entity.company.ZyhCompanyPosition">
    insert into zyh_company_position
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyid != null">
        companyid,
      </if>
      <if test="compnayname != null">
        compnayname,
      </if>
      <if test="positionname != null">
        positionname,
      </if>
      <if test="workcity != null">
        workcity,
      </if>
      <if test="fixyear != null">
        fixyear,
      </if>
      <if test="maxage != null">
        maxage,
      </if>
      <if test="moneyarea != null">
        moneyarea,
      </if>
      <if test="desct != null">
        desct,
      </if>
      <if test="required != null">
        required,
      </if>
      <if test="optime != null">
        optime,
      </if>
      <if test="minmoney != null">
        minmoney,
      </if>
      <if test="maxmoney != null">
        maxmoney,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=OTHER},
      </if>
      <if test="compnayname != null">
        #{compnayname,jdbcType=OTHER},
      </if>
      <if test="positionname != null">
        #{positionname,jdbcType=OTHER},
      </if>
      <if test="workcity != null">
        #{workcity,jdbcType=OTHER},
      </if>
      <if test="fixyear != null">
        #{fixyear,jdbcType=OTHER},
      </if>
      <if test="maxage != null">
        #{maxage,jdbcType=OTHER},
      </if>
      <if test="moneyarea != null">
        #{moneyarea,jdbcType=OTHER},
      </if>
      <if test="desct != null">
        #{desct,jdbcType=OTHER},
      </if>
      <if test="required != null">
        #{required,jdbcType=OTHER},
      </if>
      <if test="optime != null">
        #{optime,jdbcType=OTHER},
      </if>
      <if test="minmoney != null">
        #{minmoney,jdbcType=OTHER},
      </if>
      <if test="maxmoney != null">
        #{maxmoney,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyh.entity.company.ZyhCompanyPositionExample" resultType="java.lang.Long">
    select count(*) from zyh_company_position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zyh_company_position
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=OTHER},
      </if>
      <if test="record.companyid != null">
        companyid = #{record.companyid,jdbcType=OTHER},
      </if>
      <if test="record.compnayname != null">
        compnayname = #{record.compnayname,jdbcType=OTHER},
      </if>
      <if test="record.positionname != null">
        positionname = #{record.positionname,jdbcType=OTHER},
      </if>
      <if test="record.workcity != null">
        workcity = #{record.workcity,jdbcType=OTHER},
      </if>
      <if test="record.fixyear != null">
        fixyear = #{record.fixyear,jdbcType=OTHER},
      </if>
      <if test="record.maxage != null">
        maxage = #{record.maxage,jdbcType=OTHER},
      </if>
      <if test="record.moneyarea != null">
        moneyarea = #{record.moneyarea,jdbcType=OTHER},
      </if>
      <if test="record.desct != null">
        desct = #{record.desct,jdbcType=OTHER},
      </if>
      <if test="record.required != null">
        required = #{record.required,jdbcType=OTHER},
      </if>
      <if test="record.optime != null">
        optime = #{record.optime,jdbcType=OTHER},
      </if>
      <if test="record.minmoney != null">
        minmoney = #{record.minmoney,jdbcType=OTHER},
      </if>
      <if test="record.maxmoney != null">
        maxmoney = #{record.maxmoney,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zyh_company_position
    set id = #{record.id,jdbcType=OTHER},
      companyid = #{record.companyid,jdbcType=OTHER},
      compnayname = #{record.compnayname,jdbcType=OTHER},
      positionname = #{record.positionname,jdbcType=OTHER},
      workcity = #{record.workcity,jdbcType=OTHER},
      fixyear = #{record.fixyear,jdbcType=OTHER},
      maxage = #{record.maxage,jdbcType=OTHER},
      moneyarea = #{record.moneyarea,jdbcType=OTHER},
      desct = #{record.desct,jdbcType=OTHER},
      required = #{record.required,jdbcType=OTHER},
      optime = #{record.optime,jdbcType=OTHER},
      minmoney = #{record.minmoney,jdbcType=OTHER},
      maxmoney = #{record.maxmoney,jdbcType=OTHER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyh.entity.company.ZyhCompanyPosition">
    update zyh_company_position
    <set>
      <if test="companyid != null">
        companyid = #{companyid,jdbcType=OTHER},
      </if>
      <if test="compnayname != null">
        compnayname = #{compnayname,jdbcType=OTHER},
      </if>
      <if test="positionname != null">
        positionname = #{positionname,jdbcType=OTHER},
      </if>
      <if test="workcity != null">
        workcity = #{workcity,jdbcType=OTHER},
      </if>
      <if test="fixyear != null">
        fixyear = #{fixyear,jdbcType=OTHER},
      </if>
      <if test="maxage != null">
        maxage = #{maxage,jdbcType=OTHER},
      </if>
      <if test="moneyarea != null">
        moneyarea = #{moneyarea,jdbcType=OTHER},
      </if>
      <if test="desct != null">
        desct = #{desct,jdbcType=OTHER},
      </if>
      <if test="required != null">
        required = #{required,jdbcType=OTHER},
      </if>
      <if test="optime != null">
        optime = #{optime,jdbcType=OTHER},
      </if>
      <if test="minmoney != null">
        minmoney = #{minmoney,jdbcType=OTHER},
      </if>
      <if test="maxmoney != null">
        maxmoney = #{maxmoney,jdbcType=OTHER},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyh.entity.company.ZyhCompanyPosition">
    update zyh_company_position
    set companyid = #{companyid,jdbcType=OTHER},
      compnayname = #{compnayname,jdbcType=OTHER},
      positionname = #{positionname,jdbcType=OTHER},
      workcity = #{workcity,jdbcType=OTHER},
      fixyear = #{fixyear,jdbcType=OTHER},
      maxage = #{maxage,jdbcType=OTHER},
      moneyarea = #{moneyarea,jdbcType=OTHER},
      desct = #{desct,jdbcType=OTHER},
      required = #{required,jdbcType=OTHER},
      optime = #{optime,jdbcType=OTHER},
      minmoney = #{minmoney,jdbcType=OTHER},
      maxmoney = #{maxmoney,jdbcType=OTHER}
    where id = #{id,jdbcType=OTHER}
  </update>
  
  <select id="selectByPage"  resultMap="BaseResultMap">
	   select
	    <include refid="Base_Column_List" />
	    from zyh_company_position
	    <if test="_parameter != null">
	      <include refid="Update_By_Example_Where_Clause" />
	    </if>
	    order by optime desc
  </select>
</mapper>