<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyh.dao.user.ZyhUserPositionMapper">
  <resultMap id="BaseResultMap" type="com.zyh.entity.user.ZyhUserPosition">
    <id column="id" jdbcType="OTHER" property="id" />
    <result column="userid" jdbcType="OTHER" property="userid" />
    <result column="positionid" jdbcType="OTHER" property="positionid" />
    <result column="type" jdbcType="OTHER" property="type" />
    <result column="optime" jdbcType="OTHER" property="optime" />
    <result column="positionname" jdbcType="OTHER" property="positionname" />
    <result column="companyid" jdbcType="OTHER" property="companyid" />
    <result column="companyname" jdbcType="OTHER" property="companyname" />
    <result column="username" jdbcType="OTHER" property="username" />
    <result column="state" jdbcType="OTHER" property="state" />
    <result column="posttype" jdbcType="OTHER" property="posttype" />
    <result column="workprovince" jdbcType="OTHER" property="workprovince" />
    <result column="workarea" jdbcType="OTHER" property="workarea" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userid, positionid, type, optime, positionname, companyid, companyname, username, 
    state, posttype, workprovince, workarea
  </sql>
  <select id="selectByExample" parameterType="com.zyh.entity.user.ZyhUserPositionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from zyh_user_position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from zyh_user_position
    where id = #{id,jdbcType=OTHER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from zyh_user_position
    where id = #{id,jdbcType=OTHER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyh.entity.user.ZyhUserPositionExample">
    delete from zyh_user_position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyh.entity.user.ZyhUserPosition">
    insert into zyh_user_position (id, userid, positionid, 
      type, optime, positionname, 
      companyid, companyname, username, 
      state, posttype, workprovince, 
      workarea)
    values (#{id,jdbcType=OTHER}, #{userid,jdbcType=OTHER}, #{positionid,jdbcType=OTHER}, 
      #{type,jdbcType=OTHER}, #{optime,jdbcType=OTHER}, #{positionname,jdbcType=OTHER}, 
      #{companyid,jdbcType=OTHER}, #{companyname,jdbcType=OTHER}, #{username,jdbcType=OTHER}, 
      #{state,jdbcType=OTHER}, #{posttype,jdbcType=OTHER}, #{workprovince,jdbcType=OTHER}, 
      #{workarea,jdbcType=OTHER})
  </insert>
  <insert id="insertSelective" parameterType="com.zyh.entity.user.ZyhUserPosition">
    insert into zyh_user_position
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="positionid != null">
        positionid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="optime != null">
        optime,
      </if>
      <if test="positionname != null">
        positionname,
      </if>
      <if test="companyid != null">
        companyid,
      </if>
      <if test="companyname != null">
        companyname,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="posttype != null">
        posttype,
      </if>
      <if test="workprovince != null">
        workprovince,
      </if>
      <if test="workarea != null">
        workarea,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=OTHER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=OTHER},
      </if>
      <if test="positionid != null">
        #{positionid,jdbcType=OTHER},
      </if>
      <if test="type != null">
        #{type,jdbcType=OTHER},
      </if>
      <if test="optime != null">
        #{optime,jdbcType=OTHER},
      </if>
      <if test="positionname != null">
        #{positionname,jdbcType=OTHER},
      </if>
      <if test="companyid != null">
        #{companyid,jdbcType=OTHER},
      </if>
      <if test="companyname != null">
        #{companyname,jdbcType=OTHER},
      </if>
      <if test="username != null">
        #{username,jdbcType=OTHER},
      </if>
      <if test="state != null">
        #{state,jdbcType=OTHER},
      </if>
      <if test="posttype != null">
        #{posttype,jdbcType=OTHER},
      </if>
      <if test="workprovince != null">
        #{workprovince,jdbcType=OTHER},
      </if>
      <if test="workarea != null">
        #{workarea,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyh.entity.user.ZyhUserPositionExample" resultType="java.lang.Long">
    select count(*) from zyh_user_position
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update zyh_user_position
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=OTHER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=OTHER},
      </if>
      <if test="record.positionid != null">
        positionid = #{record.positionid,jdbcType=OTHER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=OTHER},
      </if>
      <if test="record.optime != null">
        optime = #{record.optime,jdbcType=OTHER},
      </if>
      <if test="record.positionname != null">
        positionname = #{record.positionname,jdbcType=OTHER},
      </if>
      <if test="record.companyid != null">
        companyid = #{record.companyid,jdbcType=OTHER},
      </if>
      <if test="record.companyname != null">
        companyname = #{record.companyname,jdbcType=OTHER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=OTHER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=OTHER},
      </if>
      <if test="record.posttype != null">
        posttype = #{record.posttype,jdbcType=OTHER},
      </if>
      <if test="record.workprovince != null">
        workprovince = #{record.workprovince,jdbcType=OTHER},
      </if>
      <if test="record.workarea != null">
        workarea = #{record.workarea,jdbcType=OTHER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update zyh_user_position
    set id = #{record.id,jdbcType=OTHER},
      userid = #{record.userid,jdbcType=OTHER},
      positionid = #{record.positionid,jdbcType=OTHER},
      type = #{record.type,jdbcType=OTHER},
      optime = #{record.optime,jdbcType=OTHER},
      positionname = #{record.positionname,jdbcType=OTHER},
      companyid = #{record.companyid,jdbcType=OTHER},
      companyname = #{record.companyname,jdbcType=OTHER},
      username = #{record.username,jdbcType=OTHER},
      state = #{record.state,jdbcType=OTHER},
      posttype = #{record.posttype,jdbcType=OTHER},
      workprovince = #{record.workprovince,jdbcType=OTHER},
      workarea = #{record.workarea,jdbcType=OTHER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyh.entity.user.ZyhUserPosition">
    update zyh_user_position
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=OTHER},
      </if>
      <if test="positionid != null">
        positionid = #{positionid,jdbcType=OTHER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=OTHER},
      </if>
      <if test="optime != null">
        optime = #{optime,jdbcType=OTHER},
      </if>
      <if test="positionname != null">
        positionname = #{positionname,jdbcType=OTHER},
      </if>
      <if test="companyid != null">
        companyid = #{companyid,jdbcType=OTHER},
      </if>
      <if test="companyname != null">
        companyname = #{companyname,jdbcType=OTHER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=OTHER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=OTHER},
      </if>
      <if test="posttype != null">
        posttype = #{posttype,jdbcType=OTHER},
      </if>
      <if test="workprovince != null">
        workprovince = #{workprovince,jdbcType=OTHER},
      </if>
      <if test="workarea != null">
        workarea = #{workarea,jdbcType=OTHER},
      </if>
    </set>
    where id = #{id,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyh.entity.user.ZyhUserPosition">
    update zyh_user_position
    set userid = #{userid,jdbcType=OTHER},
      positionid = #{positionid,jdbcType=OTHER},
      type = #{type,jdbcType=OTHER},
      optime = #{optime,jdbcType=OTHER},
      positionname = #{positionname,jdbcType=OTHER},
      companyid = #{companyid,jdbcType=OTHER},
      companyname = #{companyname,jdbcType=OTHER},
      username = #{username,jdbcType=OTHER},
      state = #{state,jdbcType=OTHER},
      posttype = #{posttype,jdbcType=OTHER},
      workprovince = #{workprovince,jdbcType=OTHER},
      workarea = #{workarea,jdbcType=OTHER}
    where id = #{id,jdbcType=OTHER}
  </update>
 <select id="selectUserPostByPage"  resultMap="BaseResultMap">
	   select
	    <include refid="Base_Column_List" />
	    from zyh_user_position
	    <if test="_parameter != null">
	      <include refid="Update_By_Example_Where_Clause" />
	    </if>
	    order by optime desc
  </select>
  
  <select id="selectUserPostPositionByPage"  resultType="com.zyh.controller.user.vo.UserPostVO">
	   select t1.*,t2.fixyear fixyear,t2.moneyarea moneyarea,t2.workaddress workaddress
	    from zyh_user_position t1 left join zyh_company_position t2 ON t1.positionid = t2.id 
	   <if test="_parameter != null">
	      <include refid="Update_By_Example_Where_Clause_t1" />
	    </if>
	    order by optime desc
  </select>
  
  <select id="selectUserPostTrainByPage"  resultType="com.zyh.controller.user.vo.UserPostVO">
	   select t1.*,t2.labeltxt labeltxt,t2.classdesc classdesc
	    from zyh_user_position t1 left join zyh_company_train t2 ON t1.positionid = t2.id 
	    <if test="_parameter != null">
	      <include refid="Update_By_Example_Where_Clause_t1" />
	    </if>
	    order by optime desc
  </select>
  
  <sql id="Update_By_Example_Where_Clause_t1">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and t1.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(t" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
</mapper>